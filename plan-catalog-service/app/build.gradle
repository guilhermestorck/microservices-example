plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "org.jetbrains.kotlin.kapt"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.31"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.3.40"
    id "application"
}

dependencyManagement {
    imports {
        mavenBom "io.micronaut:micronaut-bom:1.1.2"
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    compile project(":plan-catalog-service-core")
    compile project(":plan-catalog-service-contract")

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.31"
    compile "org.jetbrains.kotlin:kotlin-reflect:1.3.31"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut.configuration:micronaut-mongo-reactive"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-tracing"
    compile "io.jaegertracing:jaeger-thrift"
//    runtime "io.micronaut:micronaut-discovery-client"
    compile "io.micronaut.configuration:micronaut-liquibase"
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:2.9.0"
    compile "io.micronaut.configuration:micronaut-hibernate-jpa"
    compile "io.micronaut.configuration:micronaut-jdbc-hikari"
    runtime "com.h2database:h2"
    runtime "org.postgresql:postgresql:42.2.4"
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    compile "net.logstash.logback:logstash-logback-encoder:6.1"
    runtime "io.zipkin.brave:brave-instrumentation-http"
    runtime "io.zipkin.reporter2:zipkin-reporter"
    compile "io.opentracing.brave:brave-opentracing"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
}

test.classpath += configurations.developmentOnly

mainClassName = "com.ranefare.plancatalogservice.conf.Application"

allOpen {
    annotation("io.micronaut.aop.Around")
}

shadowJar {
    mergeServiceFiles()
    archiveName = "${baseName}.${extension}"
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

publishing {
    publications {
        app(MavenPublication) {
            from components.kotlin
        }
    }
}
