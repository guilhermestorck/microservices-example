plugins {
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'org.jetbrains.kotlin.kapt'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.31'
    id 'com.github.johnrengelman.shadow' version '4.0.2'
    id 'application'
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.2'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    compile project(':core')
    compile project(':contract')
    compile 'catalog-service:contract:0.1'

    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.21'
    compile 'org.jetbrains.kotlin:kotlin-reflect:1.3.21'
    compile 'io.micronaut:micronaut-runtime'
    compile 'io.micronaut:micronaut-http-client'
    compile 'io.micronaut.configuration:micronaut-mongo-reactive'
    compile 'io.micronaut:micronaut-http-server-netty'
    kapt 'io.micronaut:micronaut-inject-java'
    kapt 'io.micronaut:micronaut-validation'
    kaptTest 'io.micronaut:micronaut-inject-java'
    runtime 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8'
    runtime 'ch.qos.logback:logback-classic:1.2.3'
    testAnnotationProcessor 'io.micronaut:micronaut-inject-java'
    testCompile 'org.junit.jupiter:junit-jupiter-api'
    testCompile 'org.jetbrains.spek:spek-api:1.1.5'
    testCompile 'io.micronaut.test:micronaut-test-junit5'
    testCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
}

test.classpath += configurations.developmentOnly

mainClassName = 'orderservice.Application'

test {
    useJUnitPlatform()
}

allOpen {
    annotation('io.micronaut.aop.Around')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

publishing {
    publications {
        app(MavenPublication) {
            from components.kotlin
        }
    }
}
