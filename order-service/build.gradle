buildscript {
    repositories {
        mavenCentral()
        google()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.31'
    }
}

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'kotlin'
    apply plugin: 'maven-publish'
    apply plugin: 'jacoco'

    version '0.1'
    group 'order-service'

    repositories {
        maven {
            name = "localRepo"
            url = "/home/gstorck/workspace/micronaut/market/repo"
        }
        jcenter()
        mavenCentral()
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            javaParameters = true
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            javaParameters = true
        }
    }

    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

        testImplementation 'junit:junit:4.12'
        testImplementation 'org.codehaus.groovy:groovy-all:2.5.4'
        testImplementation 'org.spockframework:spock-core:1.2-groovy-2.5'
    }

    publishing {
        repositories {
            maven {
                name = "localRepo"
                url = "/home/gstorck/workspace/micronaut/market/repo"
            }
        }
    }

    test {
        beforeTest { descriptor ->
            logger.lifecycle("Running test: ($descriptor.className) $descriptor.name")
        }
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                element = 'CLASS'
                limit {
                    counter = 'LINE'
                    minimum = 1
                }
            }
        }
    }

    check.dependsOn jacocoTestCoverageVerification

}
